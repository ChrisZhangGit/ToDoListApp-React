{"version":3,"sources":["components/Header/index.jsx","components/Item/index.jsx","components/List/index.jsx","components/Footer/index.jsx","App.jsx","index.js"],"names":["Header","handleKeyUp","event","keyCode","target","value","trim","todoObj","id","nanoid","name","done","props","addTodo","alert","className","onKeyUp","this","type","placeholder","Component","Item","state","mouse","handleMouseEnter","flag","setState","handleCheck","updateTodo","checked","handleDelete","window","confirm","deleteTodo","style","backgroundColor","onMouseEnter","onMouseLeave","onChange","onClick","display","List","todos","console","log","map","todo","Footer","handleCheckAll","checkAllTodo","handleDeleteDone","deleteDone","doneTodos","reduce","pre","total","length","App","newTodos","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28db751d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {nanoid} from 'nanoid'\nimport './index.css'\n\n//console.log(nanoid())\nexport default class Header extends Component {\n\n    // control the type and necessity of the received props\n    static propTypes = {\n        addTodo: PropTypes.func.isRequired\n    }\n\n    //Callback function for the keyboard events\n    handleKeyUp = (event) => {\n        const {keyCode, target} = event;\n        if (keyCode !== 13) return\n        if (target.value.trim() === ''){\n            alert('The input should not be empty')\n            return\n        }\n        //console.log(target.value);\n        const todoObj = {id: nanoid(), name: target.value, done: false}\n        this.props.addTodo(todoObj);\n        target.value = ''\n        \n    }\n    \n    \n    render() {\n        //console.log(this.props.a);\n        return (\n            <div className=\"todo-header\">\n                <input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"Please input your task, and press Enter to confirm this task\"/>    \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './index.css'\n\nexport default class Item extends Component {\n\n    state = {mouse: false} //When the mouse enter or leave, change the state\n    \n    //Callback function for mouse enter and leave\n    handleMouseEnter = (flag) => {\n        //console.log(flag)\n        return () => {\n            this.setState({mouse: flag})\n            //console.log(flag)\n            //flag ? document.getElementsByClassName(\"btn\").style.display = \"block\" : document.getElementsByClassName(\"btn\").style.display = \"none\"\n        }\n    }\n\n\n    //Callback function for the click and cancel events of the todo\n    handleCheck = (id) => {\n        return (event) => {\n            this.props.updateTodo(id, event.target.checked)\n            //console.log(id, event.target.checked)\n        }\n    }\n\n    //Callback function to delete the todo\n    handleDelete = (id) => {\n        if (window.confirm('Are you sure to delete this task?')){\n            this.props.deleteTodo(id)\n        }\n    }\n    \n\n    render() {\n        const {id, name, done} = this.props\n        const {mouse} = this.state\n        return (\n            <li style={{backgroundColor: mouse ? '#ddd' : 'white'}} onMouseEnter={this.handleMouseEnter(true)} onMouseLeave={this.handleMouseEnter(false)}>\n                <label>\n                    <input type=\"checkbox\" checked={done} onChange={this.handleCheck(id)}  />\n                    <span>{name}</span>\n                </label>\n                <button onClick={() => this.handleDelete(id)} className=\"btn btn-danger\" style={{display: mouse ? 'block' : 'none'}}>\n                    Delete\n                </button>\n            </li>\n        )\n    } \n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Item from '../Item'\nimport './index.css'\n\nexport default class List extends Component {\n\n    // control the type and necessity of the received props\n    static propTypes = {\n        todos: PropTypes.array.isRequired,\n        updateTodo: PropTypes.func.isRequired,\n        deleteTodo: PropTypes.func.isRequired\n    }\n\n\n    render() {\n        //console.log(this.props.todos);\n        const {todos, updateTodo, deleteTodo} = this.props\n        console.log(todos)\n        return (\n            //console.log(this.props.b + 2),\n            <ul className='todo-main'>\n                {\n                    todos.map(todo => <Item key={todo.id} {...todo} updateTodo={updateTodo} deleteTodo={deleteTodo}/>)\n                }\n        \n            </ul>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport './index.css'\n\nexport default class Footer extends Component {\n\n    // Callback function for selecting all of the checkbox\n    handleCheckAll = (event) => {\n        this.props.checkAllTodo(event.target.checked)\n    }\n\n\n    // Callback function to delete all of the done tasks  \n    handleDeleteDone = () => {\n        if (window.confirm('Are you sure to delete these tasks?')){\n            this.props.deleteDone()\n        }\n    }\n\n    render() {\n        const {todos} = this.props\n        const doneTodos = todos.reduce((pre, todo) => pre + (todo.done ? 1 : 0), 0)\n        const total = todos.length\n        \n        return (\n            <div className=\"todo-footer\">\n                <label>\n                    <input type=\"checkbox\" onChange={this.handleCheckAll} checked={doneTodos === total && total !== 0}/>\n                </label>\n                <span>\n                    <span>Finished {doneTodos}</span> / All {total}\n                </span>\n                <button onClick={this.handleDeleteDone}  className=\"btn btn-danger\">Delete the finished tasks</button>\n            </div>\n        )\n    }\n}\n ","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport List from './components/List'\nimport Footer from './components/Footer'\nimport './App.css'\n\nexport default class App extends Component {\n    state = {todos: [\n        {id: '001', name: \"Having Breakfast\", done: true},\n        {id: '002', name: \"Having Lunch\", done: true },\n        {id: '003', name: \"Coding\", done: true },\n        {id: '004', name: \"Having Dinner\", done: true },\n        {id: '005', name: \"Sleeping\", done: true }\n    ]}\n\n\n    //to add a task to the todoObj\n    addTodo = (todoObj) => {\n        //console.log('App', todoObj)\n        const {todos} = this.state\n        const newTodos = [todoObj,...todos]\n        \n        console.log(newTodos)\n        this.setState({todos:newTodos})\n        //console.log(currentTodos)\n    }\n\n\n    // to update the todoObj\n    updateTodo = (id, done) => {\n        const {todos} = this.state\n        //map and analyse the data\n        const newTodos = todos.map((todoObj) => {\n            if (todoObj.id === id ){\n                return {...todoObj, done:done}\n            } else {\n                return todoObj\n            }\n        }\n        )\n        this.setState({todos:newTodos})\n    }\n\n    // to delete the todoObj\n    deleteTodo = (id) => {\n        const {todos} = this.state\n        const newTodos = todos.filter((todo) =>todo.id !== id)\n        this.setState({todos:newTodos})\n    }\n\n    // to delete all of the done tasks\n    deleteDone = () =>{\n        const {todos} = this.state\n        const newTodos = todos.filter((todo) => todo.done !== true)\n        this.setState({todos:newTodos})\n    }\n\n    //to select all of the tasks \n    checkAllTodo = (done) => {\n        const {todos} = this.state\n        const newTodos = todos.map((todo) => {\n            return {...todo, done:done}\n        })\n        this.setState({todos:newTodos})\n    }\n\n    render() {\n        const {todos} = this.state;\n        return (\n            <div className=\"todo-container\">\n                <div className=\"todo-wrap\">\n                    <Header addTodo={this.addTodo}/>\n                    <List todos={todos} updateTodo={this.updateTodo} deleteTodo={this.deleteTodo}/>\n                    <Footer todos={todos} deleteDone={this.deleteDone} checkAllTodo={this.checkAllTodo } />\n                </div>\n            </div>\n        )\n    }\n}\n    ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n"],"sourceRoot":""}